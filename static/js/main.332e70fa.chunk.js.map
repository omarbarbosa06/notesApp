{"version":3,"sources":["Components/Note.js","Components/AddNote.js","Components/NotesList.js","Components/Search.js","Components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","style","color","trim","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","isDarkMode","previousDarkMode","App","presentationDate","Date","nanoid","toLocaleDateString","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","console","log","setItem","stringify","filter","toLowerCase","includes","newNote","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332e70fa.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n  return (\n    <div className=\"note\">\n      <span>{text}</span>\n      <div className=\"note-footer\">\n        <small>{date}</small>\n        <MdDeleteForever\n          onClick={() => handleDeleteNote(id)}\n          className=\"delete-icon\"\n          size=\"1.3em\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import { useState } from \"react\";\n\nconst AddNote = ({ handleAddNote }) => {\n  const [noteText, setNoteText] = useState(\"\");\n  const characterLimit = 200;\n  const handleChange = (event) => {\n    if (characterLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value);\n    }\n  };\n  const handleClickSave = () => {\n    if (noteText.trim().length > 0) {\n      handleAddNote(noteText);\n      setNoteText(\"\");\n    }\n  };\n  return (\n    <div className=\"note new\">\n      <textarea\n        rows=\"8\"\n        cols=\"10\"\n        placeholder=\"Type to add a note...\"\n        value={noteText}\n        onChange={handleChange}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small\n          style={{\n            color: characterLimit - noteText.length <= 10 ? \"red\" : \"black\",\n          }}\n        >\n          {characterLimit - noteText.length} Remaining\n        </small>\n        <button className=\"save\" onClick={handleClickSave}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n  return (\n    <div className=\"notes-list\">\n      {notes.map((note) => {\n        return (\n          <Note\n            id={note.id}\n            text={note.text}\n            date={note.date}\n            handleDeleteNote={handleDeleteNote}\n          />\n        );\n      })}\n      <AddNote handleAddNote={handleAddNote} />\n    </div>\n  );\n};\n\nexport default NotesList;\n","import { MdSearch } from \"react-icons/md\";\nconst Search = ({ handleSearchNote }) => {\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\n      <input\n        onChange={(event) => handleSearchNote(event.target.value)}\n        type=\"text\"\n        placeholder=\"type to search...\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","const Header = ({ handleToggleDarkMode, isDarkMode }) => {\n  return (\n    <div className=\"header\">\n      <h1>Notes</h1>\n      <button\n        className=\"save\"\n        onClick={() =>\n          handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\n        }\n      >\n        {isDarkMode ? \"Disable\" : \"Enable\"} Dark Mode\n      </button>\n    </div>\n  );\n};\nexport default Header;\n","import NotesList from \"./Components/NotesList\";\nimport Search from \"./Components/Search\";\nimport Header from \"./Components/Header\";\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nconst App = () => {\n  const presentationDate = new Date();\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"Welcome to my notes app made in React!\",\n      date: presentationDate.toLocaleDateString(),\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n    console.log(savedNotes);\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} isDarkMode={darkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}